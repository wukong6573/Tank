熟悉mysql函数的运用
IFNULL（expr1,expr2）：
假如expr1不为NULL，则 IFNULL() 的返回值为expr1; 否则其返回值为 expr2。

NULLIF(expr1,expr2):
如果expr1 = expr2 成立，那么返回值为NULL，否则返回值为expr1

ISNULL(expr):
如expr 为null，那么isnull() 的返回值为 1，否则返回值为 0。

if函数:
格式：IF(Condition,A,B)

意义：当Condition为TRUE时，返回A；当Condition为FALSE时，返回B。

1、说明：两张关联表，删除主表中已经在副表中没有的信息 (不能起别名,只能用表名)
delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )

2、说明：选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)
select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)

2.1 个人推荐排行榜sql如下:
  排序 , 分组和排序 , 设置排行字段
 SELECT obj2.*,@rownum :=@rownum+1 rank FROM (
SELECT obj.* FROM (
    SELECT
    tsr.uid,
    tbui.name userName,
    tbui.head_url headUrl,
    tsr.use_date bestTime,
    tsr.create_date createDate
    FROM t_shudu_record tsr JOIN t_base_user_info tbui ON tsr.uid=tbui.uid
    WHERE tsr.level=#{level} ORDER BY tsr.use_date ASC ,tsr.create_date ASC) obj
    GROUP BY obj.uid ORDER BY obj.bestTime ASC) obj2 JOIN (SELECT @rownum :=0) t

3 分组查询 GROUP BY 和GROUP_CONCAT()函数示例：
语句 :
SELECT locus,GROUP_CONCAT(id) FROM info WHERE locus IN('AB086827','AF040764') GROUP BY locus;

可以将逗号更换成其他符号，如：
语句GROUP_CONCAT(distinct id ORDER BY id DESC SEPARATOR '_')

4.同时有CONCAT函数将查询结果连成一个字符串，但是查询的字段中有null时则整个结果为null，如：
SELECT CONCAT(id, ‘，’, name,age) AS con FROM info LIMIT 1;返回结果为
+----------+
| con      |
+----------+
| 1,BioCyc23 |
+----------+
5.查询本周的数据
WHERE  YEARWEEK(DATE_FORMAT(create_date,'%Y-%m-%d')) = YEARWEEK(NOW())  (周日~周一)
查询本周的数据(二):
(SELECT WEEK(DATE_ADD(NOW(),INTERVAL 6 DAY),2)) (周一~周日)

6.NULL是个神奇的东西，表示空值，未知值，任何数与它加减乘除都返回NULL。

7.COALESCE函数

COALESCE(Expression1,Expression2,Expression3,……)：接受一系列的表达式或列，返回第一个非空的值。

例如SELECT COALESCE(NULL,NULL,4,NULL,NULL,5)，那么返回4，如果里面的参数都为NULL，那么会报错。

8.排行榜的SQL（一）(适合数据不重复的情况)：
SELECT a1.Name, a1.Sales, COUNT(a2.sales) Sales_Rank FROM ranking  a1, ranking  a2

WHERE a1.Sales < a2.Sales or (a1.Sales=a2.Sales and a1.Name = a2.Name)

GROUP BY a1.Name, a1.Sales ORDER BY a1.Sales DESC, a1.Name DESC;
重点是自己和自己比较，找出a1的Sales小于a2的Sales的数据 或者Name和Sales都相等的数据(a1里的全部数据去对比a2里的每一个数据）

9.排行榜的SQL（二）：
SELECT a.uid,a.score,@rownum :=@rownum + 1 AS rank FROM 
(SELECT t.uid,MAX(t.score) score FROM t_stlx_record t GROUP BY t.uid ) a ,(SELECT @rownum := 0) r ORDER BY a.score DESC

10.函数
时期时间函数
weekday(date)    
返回日期date是星期几(0=星期一,1=星期二,……6= 星期天)。

dayofmonth(date)    
返回date是一月中的第几日(在1到31范围内)

dayofyear(date)    
返回date是一年中的第几日(在1到366范围内)

dayname(date)    
返回date是星期几(按英文名返回) ，例如 'thursday' 

monthname(date)    
返回date是几月(按英文名返回) ，例如 'february'

quarter(date)    
返回date是一年的第几个季度 ，例如 2 ，代表夏季

11.生成当天随机时间的sql:
UPDATE t_xxl_record SET create_date=DATE_ADD(NOW(),  INTERVAL  FLOOR(1 + (RAND() * 10800))   SECOND );

12.查询本月数据
 DATE_FORMAT(tof.create_date,'%Y-%m')=DATE_FORMAT(NOW(),'%Y-%m')

13.mybatis 小于 比较符, 用这种方式:
<![CDATA[ tmla.score < 60.00 ]]>

14.当天的日期是多少?
SELECT DATE(NOW())

15.判断某一天是一年中的第几周
SELECT WEEK(DATE_ADD('2018-12-31 13:42:38',INTERVAL 6 DAY),2)
或者
DATE_FORMAT(create_date,'%u')

16.不能先order by 再group by  ,要 先group by 再 order by 

17.获取含分隔符的字符串的数量:
SELECT LENGTH('1,2,3,4,5,6,7') - LENGTH(REPLACE('1,2,3,4,5,6,7', ',', '')) + 1;
返回的是 7,也就是分割后的数量

18.MySQL按照符号,链接字符串:
CONCAT_WS(x,s1,s2,...)	返回多个字符串拼接之后的字符串，每个字符串之间有一个x。

19.分割之后,取出第几个的字符串:
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(seq_name,';', index), ';', -1),,,index代表在原字符串中在第几个位置

20.添加INDEX(普通索引)

语法：ALTER TABLE `表名` ADD INDEX index_name ( `列名称` )

21.通过explain分析SQL的执行计划
type:表示MySQL在表中找到所需行的方式，或者叫访问类型，常见类型如下(从左到右，性能由差到好)

ALL  index  range ref eq_ref  const,system  NULL

ALL: 全表扫描

index: 索引全扫描

range:索引范围扫描

ref:使用非唯一索引扫描

eq_ref:使用唯一索引扫描

const，system:单表中最多只有一个匹配行

22.union all 语法：
温馨提示：使用 UNION ALL 的时候，只是单纯的把各个查询组合到一起而不会去判断数据是否重复。
SELECT aid,title,create_date FROM article UNION ALL SELECT bid,title,create_date FROM blog

23.union all 全部数据进行排序:
温馨提示：应对单个 SELECT 语句加圆括号，并把 ORDER BY 或 LIMIT 放到最后一个的后面，如果create_date 起了别名，则
order by 后面只能用 别名。
(SELECT aid,title,create_date createDate FROM article) UNION ALL (SELECT bid,title,create_date FROM blog) order by createDate 

24.union all 对子句子使用order by：
温馨提示：在子句中使用 ORDER BY，由于优先级问题，需要将整个子句加圆括号()，且必须与 LIMIT 结合使用：
(SELECT aid,title FROM article ORDER BY aid DESC LIMIT 10) 
UNION ALL
(SELECT bid,title FROM blog ORDER BY bid DESC LIMIT 10)

25.对List集合去重：
listIds.stream().distinct().collect(Collectors.toList())

26.从集合中获取某个参数，单独组成一个集合：
allCats.stream().map(CrmPrdCat::getCatId).collect(Collectors.toList());

27.除了主键以外的每个字段重复,不允许插入:
注意:需要添加的不重复字段在执行 SELECT title FROM t_encyclopedia_questions操作,查出来的title不能查询出null的,否则插入不成功,所以应该加上一个条件: where title is not null
INSERT INTO t_encyclopedia_questions (id,encyclopedia_id,title) 
SELECT '11222','112266','今晚6点22' FROM DUAL 
WHERE '999' NOT IN (SELECT title FROM t_encyclopedia_questions where title is not null)

28.用union all 实现不同的两张表中,搜索出来数据的sql:
SELECT id,video_name resourceName,video_img resourceImg,video_url videoUrl FROM t_sinology_video WHERE isDelete='N' AND video_name LIKE concat('%',#{queryDate},'%') 
UNION ALL 
SELECT id,book_name resourceName,book_img resourceImg,NULL videoUrl FROM t_gx_book WHERE removed='N' AND book_name LIKE concat('%',#{queryDate},'%')

29.把mysql中的字段中的符号,去掉或者替换掉:
语法：replace(object,search,replace)
 
意思：把object中出现search的全部替换为replace
UPDATE t_user_parent SET phone=REPLACE(phone,'(',''),phone=REPLACE(phone,')',''),NAME=REPLACE(NAME,'(',''),NAME=REPLACE(NAME,')','')

30.mysql统计相同数字,连续出现的最高次数（应用:统计连胜次数）:
SELECT MAX(obj.rownum) FROM (SELECT tsr.id,tsr.win,
 IF((tsr.win=@pname) , @row:=@row+1 , @row:=1) rownum,
 @pname:=tsr.win
 FROM t_shudu_record tsr JOIN (SELECT @row:=0, @pname:=1 ) t
 WHERE tsr.uid=#{uid} ORDER BY tsr.create_date DESC) obj

31.在mysql中提供了一些切割字符串的函数，其中SUBSTRING_INDEX(str, delim, count)
str: 要处理的字符串
delim: 分割符
count: 计数 如果为正数，则从左开始数，如果为负数，则从右开始数
举例:
SELECT substring_index('www.baidu.com','.', 1);    #www
